"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).  [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MempoolApi = void 0;
const runtime = require("../runtime");
const models_1 = require("../models");
/**
 *
 */
class MempoolApi extends runtime.BaseAPI {
    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type.
     * Get mempool transaction fee priorities
     */
    async getMempoolFeePrioritiesRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/extended/v2/mempool/fees`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.MempoolFeePrioritiesFromJSON)(jsonValue));
    }
    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type.
     * Get mempool transaction fee priorities
     */
    async getMempoolFeePriorities(initOverrides) {
        const response = await this.getMempoolFeePrioritiesRaw(initOverrides);
        return await response.value();
    }
}
exports.MempoolApi = MempoolApi;
//# sourceMappingURL=MempoolApi.js.map