/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).  [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { MempoolFeePriorities } from '../models';
/**
 * MempoolApi - interface
 *
 * @export
 * @interface MempoolApiInterface
 */
export interface MempoolApiInterface {
    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type.
     * @summary Get mempool transaction fee priorities
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MempoolApiInterface
     */
    getMempoolFeePrioritiesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolFeePriorities>>;
    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type.
     * Get mempool transaction fee priorities
     */
    getMempoolFeePriorities(initOverrides?: RequestInit): Promise<MempoolFeePriorities>;
}
/**
 *
 */
export declare class MempoolApi extends runtime.BaseAPI implements MempoolApiInterface {
    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type.
     * Get mempool transaction fee priorities
     */
    getMempoolFeePrioritiesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolFeePriorities>>;
    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type.
     * Get mempool transaction fee priorities
     */
    getMempoolFeePriorities(initOverrides?: RequestInit): Promise<MempoolFeePriorities>;
}
