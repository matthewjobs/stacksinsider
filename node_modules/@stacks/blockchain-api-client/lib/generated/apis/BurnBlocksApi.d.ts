/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).  [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { BurnBlock, BurnBlockListResponse } from '../models';
export interface GetBurnBlockRequest {
    heightOrHash: number | string;
}
export interface GetBurnBlocksRequest {
    limit?: number;
    offset?: number;
}
/**
 * BurnBlocksApi - interface
 *
 * @export
 * @interface BurnBlocksApiInterface
 */
export interface BurnBlocksApiInterface {
    /**
     * Retrieves a single burn block
     * @summary Get burn block
     * @param {number | string} heightOrHash filter by burn block height, hash, or the constant &#x60;latest&#x60; to filter for the most recent burn block
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BurnBlocksApiInterface
     */
    getBurnBlockRaw(requestParameters: GetBurnBlockRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnBlock>>;
    /**
     * Retrieves a single burn block
     * Get burn block
     */
    getBurnBlock(requestParameters: GetBurnBlockRequest, initOverrides?: RequestInit): Promise<BurnBlock>;
    /**
     * Retrieves a list of recent burn blocks
     * @summary Get burn blocks
     * @param {number} [limit] max number of burn blocks to fetch
     * @param {number} [offset] index of first burn block to fetch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BurnBlocksApiInterface
     */
    getBurnBlocksRaw(requestParameters: GetBurnBlocksRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnBlockListResponse>>;
    /**
     * Retrieves a list of recent burn blocks
     * Get burn blocks
     */
    getBurnBlocks(requestParameters: GetBurnBlocksRequest, initOverrides?: RequestInit): Promise<BurnBlockListResponse>;
}
/**
 *
 */
export declare class BurnBlocksApi extends runtime.BaseAPI implements BurnBlocksApiInterface {
    /**
     * Retrieves a single burn block
     * Get burn block
     */
    getBurnBlockRaw(requestParameters: GetBurnBlockRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnBlock>>;
    /**
     * Retrieves a single burn block
     * Get burn block
     */
    getBurnBlock(requestParameters: GetBurnBlockRequest, initOverrides?: RequestInit): Promise<BurnBlock>;
    /**
     * Retrieves a list of recent burn blocks
     * Get burn blocks
     */
    getBurnBlocksRaw(requestParameters: GetBurnBlocksRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BurnBlockListResponse>>;
    /**
     * Retrieves a list of recent burn blocks
     * Get burn blocks
     */
    getBurnBlocks(requestParameters: GetBurnBlocksRequest, initOverrides?: RequestInit): Promise<BurnBlockListResponse>;
}
