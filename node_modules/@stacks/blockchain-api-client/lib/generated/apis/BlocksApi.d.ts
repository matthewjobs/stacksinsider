/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).  [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Block, BlockListResponse, NakamotoBlock, NakamotoBlockListResponse } from '../models';
export interface GetBlockRequest {
    heightOrHash: number | string;
}
export interface GetBlockByBurnBlockHashRequest {
    burnBlockHash: string;
}
export interface GetBlockByBurnBlockHeightRequest {
    burnBlockHeight: number;
}
export interface GetBlockByHashRequest {
    hash: string;
}
export interface GetBlockByHeightRequest {
    height: number;
}
export interface GetBlockListRequest {
    limit?: number;
    offset?: number;
}
export interface GetBlocksRequest {
    limit?: number;
    offset?: number;
}
export interface GetBlocksByBurnBlockRequest {
    heightOrHash: number | string;
    limit?: number;
    offset?: number;
}
/**
 * BlocksApi - interface
 *
 * @export
 * @interface BlocksApiInterface
 */
export interface BlocksApiInterface {
    /**
     * Retrieves a single block
     * @summary Get block
     * @param {number | string} heightOrHash filter by block height, hash, index block hash or the constant &#x60;latest&#x60; to filter for the most recent block
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlockRaw(requestParameters: GetBlockRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NakamotoBlock>>;
    /**
     * Retrieves a single block
     * Get block
     */
    getBlock(requestParameters: GetBlockRequest, initOverrides?: RequestInit): Promise<NakamotoBlock>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burnchain block hash
     * @summary Get block by burnchain block hash
     * @param {string} burnBlockHash Hash of the burnchain block
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlockByBurnBlockHashRaw(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burnchain block hash
     * Get block by burnchain block hash
     */
    getBlockByBurnBlockHash(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burn chain height
     * @summary Get block by burnchain height
     * @param {number} burnBlockHeight Height of the burn chain block
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlockByBurnBlockHeightRaw(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burn chain height
     * Get block by burnchain height
     */
    getBlockByBurnBlockHeight(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\'get_block_list\' API) to get your block details.
     * @summary Get block by hash
     * @param {string} hash Hash of the block
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlockByHashRaw(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\'get_block_list\' API) to get your block details.
     * Get block by hash
     */
    getBlockByHash(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block at a given block height
     * @summary Get block by height
     * @param {number} height Height of the block
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlockByHeightRaw(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block at a given block height
     * Get block by height
     */
    getBlockByHeight(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
     * @summary Get recent blocks
     * @param {number} [limit] max number of blocks to fetch
     * @param {number} [offset] index of first block to fetch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlockListRaw(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BlockListResponse>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
     * Get recent blocks
     */
    getBlockList(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<BlockListResponse>;
    /**
     * Retrieves a list of recently mined blocks
     * @summary Get blocks
     * @param {number} [limit] max number of blocks to fetch
     * @param {number} [offset] index of first burn block to fetch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlocksRaw(requestParameters: GetBlocksRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NakamotoBlockListResponse>>;
    /**
     * Retrieves a list of recently mined blocks
     * Get blocks
     */
    getBlocks(requestParameters: GetBlocksRequest, initOverrides?: RequestInit): Promise<NakamotoBlockListResponse>;
    /**
     * Retrieves a list of blocks confirmed by a specific burn block
     * @summary Get blocks by burn block
     * @param {number | string} heightOrHash filter by burn block height, hash, or the constant &#x60;latest&#x60; to filter for the most recent burn block
     * @param {number} [limit] max number of blocks to fetch
     * @param {number} [offset] index of first burn block to fetch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BlocksApiInterface
     */
    getBlocksByBurnBlockRaw(requestParameters: GetBlocksByBurnBlockRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NakamotoBlockListResponse>>;
    /**
     * Retrieves a list of blocks confirmed by a specific burn block
     * Get blocks by burn block
     */
    getBlocksByBurnBlock(requestParameters: GetBlocksByBurnBlockRequest, initOverrides?: RequestInit): Promise<NakamotoBlockListResponse>;
}
/**
 *
 */
export declare class BlocksApi extends runtime.BaseAPI implements BlocksApiInterface {
    /**
     * Retrieves a single block
     * Get block
     */
    getBlockRaw(requestParameters: GetBlockRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NakamotoBlock>>;
    /**
     * Retrieves a single block
     * Get block
     */
    getBlock(requestParameters: GetBlockRequest, initOverrides?: RequestInit): Promise<NakamotoBlock>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burnchain block hash
     * Get block by burnchain block hash
     */
    getBlockByBurnBlockHashRaw(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burnchain block hash
     * Get block by burnchain block hash
     */
    getBlockByBurnBlockHash(requestParameters: GetBlockByBurnBlockHashRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burn chain height
     * Get block by burnchain height
     */
    getBlockByBurnBlockHeightRaw(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves block details of a specific block for a given burn chain height
     * Get block by burnchain height
     */
    getBlockByBurnBlockHeight(requestParameters: GetBlockByBurnBlockHeightRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\'get_block_list\' API) to get your block details.
     * Get block by hash
     */
    getBlockByHashRaw(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block (\'get_block_list\' API) to get your block details.
     * Get block by hash
     */
    getBlockByHash(requestParameters: GetBlockByHashRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block at a given block height
     * Get block by height
     */
    getBlockByHeightRaw(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Block>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).  Retrieves block details of a specific block at a given block height
     * Get block by height
     */
    getBlockByHeight(requestParameters: GetBlockByHeightRequest, initOverrides?: RequestInit): Promise<Block>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
     * Get recent blocks
     */
    getBlockListRaw(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<BlockListResponse>>;
    /**
     * **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).  Retrieves a list of recently mined blocks  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
     * Get recent blocks
     */
    getBlockList(requestParameters: GetBlockListRequest, initOverrides?: RequestInit): Promise<BlockListResponse>;
    /**
     * Retrieves a list of recently mined blocks
     * Get blocks
     */
    getBlocksRaw(requestParameters: GetBlocksRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NakamotoBlockListResponse>>;
    /**
     * Retrieves a list of recently mined blocks
     * Get blocks
     */
    getBlocks(requestParameters: GetBlocksRequest, initOverrides?: RequestInit): Promise<NakamotoBlockListResponse>;
    /**
     * Retrieves a list of blocks confirmed by a specific burn block
     * Get blocks by burn block
     */
    getBlocksByBurnBlockRaw(requestParameters: GetBlocksByBurnBlockRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<NakamotoBlockListResponse>>;
    /**
     * Retrieves a list of blocks confirmed by a specific burn block
     * Get blocks by burn block
     */
    getBlocksByBurnBlock(requestParameters: GetBlocksByBurnBlockRequest, initOverrides?: RequestInit): Promise<NakamotoBlockListResponse>;
}
