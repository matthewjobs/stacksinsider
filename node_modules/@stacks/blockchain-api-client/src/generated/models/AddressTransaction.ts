/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).  [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json) 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressTransactionsV2ListResponseEvents,
    AddressTransactionsV2ListResponseEventsFromJSON,
    AddressTransactionsV2ListResponseEventsFromJSONTyped,
    AddressTransactionsV2ListResponseEventsToJSON,
} from './';

/**
 * Address transaction with STX, FT and NFT transfer summaries
 * @export
 * @interface AddressTransaction
 */
export interface AddressTransaction {
    /**
     * Describes all transaction types on Stacks 2.0 blockchain
     * @type {object}
     * @memberof AddressTransaction
     */
    tx: object;
    /**
     * Total sent from the given address, including the tx fee, in micro-STX as an integer string.
     * @type {string}
     * @memberof AddressTransaction
     */
    stx_sent: string;
    /**
     * Total received by the given address in micro-STX as an integer string.
     * @type {string}
     * @memberof AddressTransaction
     */
    stx_received: string;
    /**
     * 
     * @type {AddressTransactionsV2ListResponseEvents}
     * @memberof AddressTransaction
     */
    events?: AddressTransactionsV2ListResponseEvents;
}

export function AddressTransactionFromJSON(json: any): AddressTransaction {
    return AddressTransactionFromJSONTyped(json, false);
}

export function AddressTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tx': json['tx'],
        'stx_sent': json['stx_sent'],
        'stx_received': json['stx_received'],
        'events': !exists(json, 'events') ? undefined : AddressTransactionsV2ListResponseEventsFromJSON(json['events']),
    };
}

export function AddressTransactionToJSON(value?: AddressTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tx': value.tx,
        'stx_sent': value.stx_sent,
        'stx_received': value.stx_received,
        'events': AddressTransactionsV2ListResponseEventsToJSON(value.events),
    };
}

