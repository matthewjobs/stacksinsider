/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).  [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json) 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * GET request that returns transactions
 * @export
 * @interface PostCoreNodeTransactionsError
 */
export interface PostCoreNodeTransactionsError {
    /**
     * The error
     * @type {string}
     * @memberof PostCoreNodeTransactionsError
     */
    error: string;
    /**
     * The reason for the error
     * @type {string}
     * @memberof PostCoreNodeTransactionsError
     */
    reason: string;
    /**
     * More details about the reason
     * @type {object}
     * @memberof PostCoreNodeTransactionsError
     */
    reason_data: object;
    /**
     * The relevant transaction id
     * @type {string}
     * @memberof PostCoreNodeTransactionsError
     */
    txid: string;
}

export function PostCoreNodeTransactionsErrorFromJSON(json: any): PostCoreNodeTransactionsError {
    return PostCoreNodeTransactionsErrorFromJSONTyped(json, false);
}

export function PostCoreNodeTransactionsErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostCoreNodeTransactionsError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': json['error'],
        'reason': json['reason'],
        'reason_data': json['reason_data'],
        'txid': json['txid'],
    };
}

export function PostCoreNodeTransactionsErrorToJSON(value?: PostCoreNodeTransactionsError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': value.error,
        'reason': value.reason,
        'reason_data': value.reason_data,
        'txid': value.txid,
    };
}

