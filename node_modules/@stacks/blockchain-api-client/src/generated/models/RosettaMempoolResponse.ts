/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).  [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json) 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TransactionIdentifier,
    TransactionIdentifierFromJSON,
    TransactionIdentifierFromJSONTyped,
    TransactionIdentifierToJSON,
} from './';

/**
 * A MempoolResponse contains all transaction identifiers in the mempool for a particular network_identifier.
 * @export
 * @interface RosettaMempoolResponse
 */
export interface RosettaMempoolResponse {
    /**
     * 
     * @type {Array<TransactionIdentifier>}
     * @memberof RosettaMempoolResponse
     */
    transaction_identifiers: Array<TransactionIdentifier>;
    /**
     * 
     * @type {object}
     * @memberof RosettaMempoolResponse
     */
    metadata?: object;
}

export function RosettaMempoolResponseFromJSON(json: any): RosettaMempoolResponse {
    return RosettaMempoolResponseFromJSONTyped(json, false);
}

export function RosettaMempoolResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaMempoolResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transaction_identifiers': ((json['transaction_identifiers'] as Array<any>).map(TransactionIdentifierFromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function RosettaMempoolResponseToJSON(value?: RosettaMempoolResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transaction_identifiers': ((value.transaction_identifiers as Array<any>).map(TransactionIdentifierToJSON)),
        'metadata': value.metadata,
    };
}

